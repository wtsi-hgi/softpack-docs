"use strict";(self.webpackChunksoftpack_docs=self.webpackChunksoftpack_docs||[]).push([[701],{3905:(e,t,r)=>{r.d(t,{Zo:()=>h,kt:()=>f});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),c=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},h=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,h=i(e,["components","mdxType","originalType","parentName"]),d=c(r),p=n,f=d["".concat(s,".").concat(p)]||d[p]||u[p]||o;return r?a.createElement(f,l(l({ref:t},h),{},{components:r})):a.createElement(f,l({ref:t},h))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:n,l[1]=i;for(var c=2;c<o;c++)l[c]=r[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}p.displayName="MDXCreateElement"},4663:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=r(7462),n=(r(7294),r(3905));const o={sidebar_position:3},l="Branching Model",i={unversionedId:"reference/branching_model",id:"reference/branching_model",title:"Branching Model",description:"A short description of Gitflow branching model based on the following:",source:"@site/docs/reference/branching_model.md",sourceDirName:"reference",slug:"/reference/branching_model",permalink:"/softpack-docs/docs/reference/branching_model",draft:!1,tags:[],version:"current",lastUpdatedAt:1693295905,formattedLastUpdatedAt:"Aug 29, 2023",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docs",previous:{title:"Development Roadmap",permalink:"/softpack-docs/docs/reference/development_roadmap"},next:{title:"Command Line Interface",permalink:"/softpack-docs/docs/reference/cli"}},s={},c=[{value:"Master and Develop Branches",id:"master-and-develop-branches",level:3},{value:"master branch",id:"master-branch",level:4},{value:"develop branch",id:"develop-branch",level:4},{value:"Feature branches",id:"feature-branches",level:3},{value:"Release branches",id:"release-branches",level:3},{value:"Hotfix branches",id:"hotfix-branches",level:3},{value:"Bug Fixes",id:"bug-fixes",level:3}],h={toc:c},d="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(d,(0,a.Z)({},h,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"branching-model"},"Branching Model"),(0,n.kt)("h1",{id:"git-workflow"},"Git Workflow"),(0,n.kt)("p",null,"A short description of Gitflow branching model based on the following:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://nvie.com/posts/a-successful-git-branching-model"},"GitFlow")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow"},"GitFlow Tutorial"))),(0,n.kt)("p",null,"The Gitflow branching model generally involves five types of branches:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"master"),(0,n.kt)("li",{parentName:"ul"},"develop"),(0,n.kt)("li",{parentName:"ul"},"feature"),(0,n.kt)("li",{parentName:"ul"},"release"),(0,n.kt)("li",{parentName:"ul"},"hotfix")),(0,n.kt)("img",{src:"https://nvie.com/img/git-model@2x.png",width:"600"}),(0,n.kt)("h3",{id:"master-and-develop-branches"},"Master and Develop Branches"),(0,n.kt)("p",null,"The two main branches in Gitflow branching model are master and develop."),(0,n.kt)("img",{src:"https://wac-cdn.atlassian.com/dam/jcr:2bef0bef-22bc-4485-94b9-a9422f70f11c/02%20(2).svg?cdnVersion=1491",width:"600"}),(0,n.kt)("h4",{id:"master-branch"},"master branch"),(0,n.kt)("p",null,"The master branch is the current release-ready branch. Nothing should be pushed\nto master branch directly without a pull request from a release branch or a\nhotfix branch. It is expected that every commit to master signifies a new major,\nminor or patch release. Commits to master branch, therefore, should be extremely\ninfrequent compared to the develop branch as shown in the figure above."),(0,n.kt)("h4",{id:"develop-branch"},"develop branch"),(0,n.kt)("p",null,"The develop branch is the current development branch. Similar to the master\nbranch, nothing should be pushed to master branch directly without a pull\nrequest from a feature branch or if the changes are a bug fix to be incorporated\nin the next release. The idea is that multiple features can be integrated\ntogether in a single develop branch and tested on a regular basis. Once all\nfeatures of a target release are complete, the develop branch can be merged to a\nrelease branch in preparation for the next release."),(0,n.kt)("h3",{id:"feature-branches"},"Feature branches"),(0,n.kt)("p",null,"This is where development of any new feature is kept. Feature branches should\nbe based on the develop branch as shown below:"),(0,n.kt)("p",null,"All active development should be kept in a separate feature branch to avoid any\nconflicts with other features. One way to organize the feature branches is to\nkeep them under a /feature hierarchy:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"feature/cool_feature"),(0,n.kt)("li",{parentName:"ul"},"feature/super_cool_feature"),(0,n.kt)("li",{parentName:"ul"},"feature/not_so_cool_feature")),(0,n.kt)("img",{src:"https://wac-cdn.atlassian.com/dam/jcr:b5259cce-6245-49f2-b89b-9871f9ee3fa4/03%20(2).svg?cdnVersion=1491",width:"600"}),(0,n.kt)("p",null,"Feature branches can be deleted once a feature is fully integrated into a\nrelease and merged to the master branch. However, it is expected that during\ndevelopment, a feature branch may require multiple pull requests to develop\nbranch so it's reasonable to not delete the feature branch immediately after a\nmerge."),(0,n.kt)("h3",{id:"release-branches"},"Release branches"),(0,n.kt)("p",null,"Release branches can follow a hierarchical scheme smilar to the feature branches:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"release/1.0.0"),(0,n.kt)("li",{parentName:"ul"},"release/1.0.1"),(0,n.kt)("li",{parentName:"ul"},"release/1.1.0"),(0,n.kt)("li",{parentName:"ul"},"release/2.0.0")),(0,n.kt)("img",{src:"https://wac-cdn.atlassian.com/dam/jcr:a9cea7b7-23c3-41a7-a4e0-affa053d9ea7/04%20(1).svg?cdnVersion=1491",width:"600"}),(0,n.kt)("p",null,"A release branch is forked from the develop branch when all features\ntargeted for a release are fully integrated and tested in the develop branch."),(0,n.kt)("h3",{id:"hotfix-branches"},"Hotfix branches"),(0,n.kt)("p",null,"Hotfix branches are used for providing patches directly from the master branch.\nAs the name suggests, a hotfix branch is generally used when an urgent patch\nneeds to be released. Hotfixes can, however, increase the burden of merging the\npatch into develop so they should only be used in extremely rare circumstances."),(0,n.kt)("img",{src:"https://wac-cdn.atlassian.com/dam/jcr:61ccc620-5249-4338-be66-94d563f2843c/05%20(2).svg?cdnVersion=1491",width:"600"}),(0,n.kt)("h3",{id:"bug-fixes"},"Bug Fixes"),(0,n.kt)("p",null,"Where a bug fix is pushed depends on the development cycle. If a bug if\ndiscovered and fixed while a feature is in development, then it should be pushed\nto the appropriate feature branch first and then merged to develop. If, however,\na bug is discovered after a feature is released then it can be pushed to the\ndevelop branch to be picked up for the next release. It is also reasonable to\ncreate a separate branch for a bug fix if the changes are not trivial or require\ncollaboration between multiple contributors."))}u.isMDXComponent=!0}}]);