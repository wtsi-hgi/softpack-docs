"use strict";(self.webpackChunksoftpack_docs=self.webpackChunksoftpack_docs||[]).push([[949],{3905:(e,t,a)=>{a.d(t,{Zo:()=>f,kt:()=>u});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),l=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},f=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,f=s(e,["components","mdxType","originalType","parentName"]),p=l(a),k=r,u=p["".concat(c,".").concat(k)]||p[k]||d[k]||o;return a?n.createElement(u,i(i({ref:t},f),{},{components:a})):n.createElement(u,i({ref:t},f))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=k;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=a[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},5577:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=a(7462),r=(a(7294),a(3905));const o={sidebar_position:3},i="System Architecture",s={unversionedId:"overview/architecture",id:"overview/architecture",title:"System Architecture",description:"This documentation is under development and may be incomplete.",source:"@site/docs/overview/architecture.md",sourceDirName:"overview",slug:"/overview/architecture",permalink:"/softpack-docs/docs/overview/architecture",draft:!1,tags:[],version:"current",lastUpdatedAt:1687256239,formattedLastUpdatedAt:"Jun 20, 2023",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docs",previous:{title:"Features",permalink:"/softpack-docs/docs/overview/features"},next:{title:"Testing Strategy",permalink:"/softpack-docs/docs/overview/testing_strategy"}},c={},l=[{value:"Bird&#39;s Eye View",id:"birds-eye-view",level:2},{value:"SoftPack Clients",id:"softpack-clients",level:2},{value:"SoftPack Command Line Interface (CLI)",id:"softpack-command-line-interface-cli",level:3},{value:"SoftPack Web",id:"softpack-web",level:3},{value:"SoftPack Core",id:"softpack-core",level:2},{value:"SoftPack GraphQL",id:"softpack-graphql",level:3},{value:"SoftPack Auth",id:"softpack-auth",level:3},{value:"SoftPack Artifacts",id:"softpack-artifacts",level:2},{value:"SoftPack Builder",id:"softpack-builder",level:2},{value:"SoftPack Deploy Agent",id:"softpack-deploy-agent",level:2},{value:"Usage Scenarios",id:"usage-scenarios",level:2},{value:"Creating a new environment",id:"creating-a-new-environment",level:3},{value:"Event Sequence",id:"event-sequence",level:3}],f={toc:l},p="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(p,(0,n.Z)({},f,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"system-architecture"},"System Architecture"),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"This documentation is under development and may be incomplete.")),(0,r.kt)("p",null,"SoftPack is built using a modern ",(0,r.kt)("a",{parentName:"p",href:"https://letmegooglethat.com/?q=what+is+microservices+architecture"},"microservices architecture"),". Unlike monolithic\nmonstrosities of the past, modern software systems are almost always built\nwith smaller lightweight services that interoperate together and communicate\nto each other using well-defined interfaces over standard protocols."),(0,r.kt)("p",null,"The architecture described here is composed of loosely-connected stateless\nservices capable of being deployed, upgraded, restarted and scaled up,\nindependent of other services in the system. Some services are more resource\nintensive than others and benefit from running in an environment where\nadditional nodes can be added for load-balancing concurrent tasks. Other\nservices, however, can happily operate a single-threaded FIFO queue without\nbecoming a bottleneck in the system. In a microservice architecture, each\nservice is capable of being scaled horizontally only when necessary and\ncapacity planning decisions do not need to be made up front. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Notation")),(0,r.kt)("p",null,"A quick word about the notation used in the diagrams in the documentation\nbefore we proceed. "),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Only uni-directional arrows are used in the diagrams below. This is by\ndesign. The notation ",(0,r.kt)("inlineCode",{parentName:"p"},"X \u2192 Y")," should be read as, ",(0,r.kt)("inlineCode",{parentName:"p"},"X")," uses ",(0,r.kt)("inlineCode",{parentName:"p"},"Y")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"X")," calls ",(0,r.kt)("inlineCode",{parentName:"p"},"Y"),",\nor ",(0,r.kt)("inlineCode",{parentName:"p"},"X")," sends a message to ",(0,r.kt)("inlineCode",{parentName:"p"},"Y"),".  Most inter-service communication requires\nbidirectional messaging. However, in a request-response framework, the request\nare response are rarely symmetric, so bidirectional arrows are generally\nmisleading. Another arrow in the opposite direction denoting the response would\nmake more sense but that practice is avoided here to reduce unnecessary clutter.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"/")," symbol is used to denote layering of protocol or messaging in the\nstack and not an either/or substitution marker. For example, ",(0,r.kt)("inlineCode",{parentName:"p"},"HTML / HTTP"),"\nor ",(0,r.kt)("inlineCode",{parentName:"p"},"REST / HTTP")," are read as ",(0,r.kt)("inlineCode",{parentName:"p"},"HTML")," over ",(0,r.kt)("inlineCode",{parentName:"p"},"HTTP"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"REST")," over ",(0,r.kt)("inlineCode",{parentName:"p"},"HTTP"),"\nrespectively.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Error conditions are excluded from the diagrams for brevity. The diagrams\ndo not mean that every service will always return ",(0,r.kt)("inlineCode",{parentName:"p"},"status = OK"),". Some\noperations will undoubtedly return errors but when a service encounters an\nerror, it will propagate the error upwards in the stack and notify the caller\nor log the event if necessary. "))),(0,r.kt)("h2",{id:"birds-eye-view"},"Bird's Eye View"),(0,r.kt)("p",null,"A high-level schematic of SoftPack is illustrated below outlining each major\ncomponent in the system."),(0,r.kt)("mermaid",{value:'flowchart TB\n    classDef dashed_container fill:#FFFFFF, stroke-dasharray:4;\n\n    alice(fa:fa-user Alice)\n    bob(fa:fa-user Bob)\n    charlie(fa:fa-user Charlie)\n    subgraph softpack_clients [SoftPack Clients]\n      direction TB\n      softpack_client(fa:fa-terminal SoftPack Command Line Interface)\n      softpack_web(fa:fa-globe SoftPack Web)\n    end\n    class softpack_clients dashed_container;\n\n    alice --\x3e|bash| softpack_client\n    bob --\x3e|zsh| softpack_client\n    charlie --\x3e|HTML / HTTP| softpack_web\n            \n    subgraph softpack_core[SoftPack Core]\n      direction LR\n      softpack_graphql(fa:fa-circle-nodes SoftPack GraphQL<br/> Implements GraphQL Service)\n      softpack_auth(fa:fa-shield-halved SoftPack Auth <br/> Implements authentication & authorization)\n      softpack_graphql -.-> softpack_auth\n    end\n    class softpack_core dashed_container;\n        \n    softpack_clients --\x3e|GraphQL / HTTP | softpack_core\n    \n    subgraph softpack_artifacts["SoftPack Artifacts (GitLab)"]\n      softpack_env(fa:fa-file-lines Environment Definitions <br/> Spack environment files)\n      softpack_modules(fa:fa-box-archive Module Files <br/> For use with module command)\n      softpack_images(fa:fa-box-open Container Images <br/> Docker/Singularity images)\n      softpack_env --- softpack_images\n      softpack_images --- softpack_modules\n    end    \n    class softpack_artifacts dashed_container;\n    \n    softpack_core --\x3e|"REST API (GitLab) / HTTP"| softpack_artifacts\n    \n    softpack_builder(fa:fa-gears SoftPack Builder <br/> Builds container images and module files)\n    \n    softpack_artifacts --\x3e|Webhook / HTTP| softpack_builder\n    softpack_builder --\x3e|"REST API (GitLab, Docker Registry) / HTTP"| softpack_artifacts\n    \n    softpack_deploy(fa:fa-download SoftPack Deployment Agent <br/> Deploys container images and module files)\n\n    softpack_artifacts --\x3e|Webhook / HTTP| softpack_deploy\n    linkStyle 5 stroke-width:0px;      \n    linkStyle 6 stroke-width:0px;      \n\n    softpack_deploy --\x3e|"WebSocket (WS)"| softpack_core'}),(0,r.kt)("h2",{id:"softpack-clients"},"SoftPack Clients"),(0,r.kt)("mermaid",{value:"flowchart TB\n    classDef dashed_container fill:#FFFFFF, stroke-dasharray:4;\n\n    alice(fa:fa-user Alice)\n    bob(fa:fa-user Bob)\n    charlie(fa:fa-user Charlie)\n    subgraph softpack_clients [SoftPack Clients]\n      direction TB\n      softpack_client(fa:fa-terminal SoftPack Command Line Interface)\n      softpack_web(fa:fa-globe SoftPack Web)\n    end\n    class softpack_clients dashed_container;\n\n    alice --\x3e|bash| softpack_client\n    bob --\x3e|zsh| softpack_client\n    charlie --\x3e|HTML / HTTP| softpack_web\n            \n    subgraph softpack_core[SoftPack Core]\n      direction LR\n      softpack_graphql(fa:fa-circle-nodes SoftPack GraphQL<br/> Implements GraphQL Service)\n      softpack_auth(fa:fa-shield-halved SoftPack Auth <br/> Implements authentication & authorization)\n      softpack_graphql -.-> softpack_auth\n    end\n    class softpack_core dashed_container;\n        \n    softpack_clients --\x3e|GraphQL / HTTP | softpack_core\n    "}),(0,r.kt)("h3",{id:"softpack-command-line-interface-cli"},"SoftPack Command Line Interface (CLI)"),(0,r.kt)("p",null,"SoftPack provides a Command Line Interface (CLI) for use in *nix shells either\ninteractively or in non-interactive scripting environments. The CLI offers\nfull coverage of the functionality offered by SoftPack including the ability\nto create and manage your environments, and the ability to search and discover\nenvironments created and shared by others."),(0,r.kt)("h3",{id:"softpack-web"},"SoftPack Web"),(0,r.kt)("p",null,"SoftPack Web provides a graphical interface for managing environments created\nwith SoftPack. In contrast with the CLI, the web interface offers a more\nuser-friendly experience when searching for environments created and shared by\nothers; or searching for available packages from a large collection; or narrowing\ndown the search based on specific versions of a package. The web interface can\nalso be used to monitor the status of in-progress tasks such as environment\ncreation requests initiated from the CLI."),(0,r.kt)("h2",{id:"softpack-core"},"SoftPack Core"),(0,r.kt)("mermaid",{value:'flowchart TB\n    classDef dashed_container fill:#FFFFFF, stroke-dasharray:4;\n\n    subgraph softpack_core[SoftPack Core]\n      direction LR\n      softpack_graphql(fa:fa-circle-nodes SoftPack GraphQL<br/> Implements GraphQL Service)\n      softpack_auth(fa:fa-shield-halved SoftPack Auth <br/> Implements authentication & authorization)\n      softpack_graphql -.-> softpack_auth\n    end\n    class softpack_core dashed_container;\n        \n    subgraph softpack_artifacts["SoftPack Artifacts (GitLab)"]\n      softpack_env(fa:fa-file-lines Environment Definitions <br/> Spack environment files)\n      softpack_modules(fa:fa-box-archive Module Files <br/> For use with module command)\n      softpack_images(fa:fa-box-open Container Images <br/> Docker/Singularity images)\n      softpack_env --- softpack_images\n      softpack_images --- softpack_modules\n    end    \n    class softpack_artifacts dashed_container;\n    linkStyle 1 stroke-width:0px;      \n    linkStyle 2 stroke-width:0px;      \n     \n    softpack_core --\x3e|"REST API (GitLab) / HTTP"| softpack_artifacts\n   '}),(0,r.kt)("p",null,"SoftPack Core implements a service that listens to requests from SoftPack\nclients and uses GitLab API to create, update or delete environments in the\nSoftPack Artifacts repository. "),(0,r.kt)("h3",{id:"softpack-graphql"},"SoftPack GraphQL"),(0,r.kt)("p",null,"SoftPack GraphQL implements the ",(0,r.kt)("a",{parentName:"p",href:"https://graphql.org"},"GraphQL")," service in\nSoftPack. GraphQL is used because of the flexibility it offers when performing\ncomplex queries. Unlike REST APIs where multiple queries from multiple\nendpoints often require complex logic to be embedded in client interfaces,\nGraphQL provides a query language that can span multiple sources, allowing the\nserver to optimise query results and reduce the amount of roundtrip calls a\nclient needs to make to perform a complex query."),(0,r.kt)("h3",{id:"softpack-auth"},"SoftPack Auth"),(0,r.kt)("p",null,"SoftPack Auth is an internal component of SoftPack Core responsible for\nimplementing authentication and authorization support."),(0,r.kt)("p",null,"Authentication is only necessary when the client is connected using SoftPack\nCLI. SoftPack Web leverages LDAP and Okta support in Nginx and does not need to\nperform its own authentication. "),(0,r.kt)("p",null,"Authorization is carried out over LDAP regardless of whether the client is\nconnected using SoftPack CLI or SoftPack Web to verify that the user is\nauthorized to carry out the tasks they're attempting to perform."),(0,r.kt)("h2",{id:"softpack-artifacts"},"SoftPack Artifacts"),(0,r.kt)("mermaid",{value:'flowchart TB\n    classDef dashed_container fill:#FFFFFF, stroke-dasharray:4;\n\n    subgraph softpack_artifacts["SoftPack Artifacts (GitLab)"]\n      softpack_env(fa:fa-file-lines Environment Definitions <br/> Spack environment files)\n      softpack_modules(fa:fa-box-archive Module Files <br/> For use with module command)\n      softpack_images(fa:fa-box-open Container Images <br/> Docker/Singularity images)\n      softpack_env --- softpack_images\n      softpack_images --- softpack_modules\n    end    \n    class softpack_artifacts dashed_container;\n    linkStyle 0 stroke-width:0px;      \n    linkStyle 1 stroke-width:0px;      \n    \n    softpack_builder(fa:fa-gears SoftPack Builder <br/> Builds container images and module files)\n    \n    softpack_artifacts --\x3e|Webhook / HTTP| softpack_builder'}),(0,r.kt)("p",null,"SoftPack Artifacts is a GitLab repository that stores the following for each\nenvironment:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"An environment file that defines the packages that are part of the\nenvironment and any dependencies."),(0,r.kt)("li",{parentName:"ul"},"A module file that allows the environment to be loaded using the ",(0,r.kt)("inlineCode",{parentName:"li"},"module"),"\ncommand."),(0,r.kt)("li",{parentName:"ul"},"Docker or singularity images stored in the container registry of the\nrepository."),(0,r.kt)("li",{parentName:"ul"},"metadata (yet-to-be-defined) for controlling visibility (private vs public)\nand permissions (users or groups authorized to update the environment other\nthan the owner)")),(0,r.kt)("p",null,"Only SoftPack Core and SoftPack Builder are allowed to push changes to the\nrepository. End-users can only see the contents of the repository using\nSoftPack CLI or SoftPack Web. Direct access to the repository is neither\nallowed, nor required."),(0,r.kt)("p",null,"SoftPack Artifacts repository is structured to allow for environments to be\ncreated and stored under a user or group hierarchy. This is how ownership of\nan environment is determined and prevents one user from modifying another user's\nenvironment without explicit permission. "),(0,r.kt)("p",null,"In the illustration below, a simplified view of the repository is shown with\nusers alice, bob, and charlie; groups named after capital cities (athens,\nbaku and cairo); and environments named after elements from the periodic table."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"/\n\u251c\u2500\u2500 groups\n\u2502\xa0\xa0 \u251c\u2500\u2500 athens\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 environments\n\u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 zinc\n\u2502\xa0\xa0 \u251c\u2500\u2500 baku\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 environments\n\u2502\xa0\xa0 \u2502\xa0\xa0     \u251c\u2500\u2500 lithium\n\u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 scandium\n\u2502\xa0\xa0 \u2514\u2500\u2500 cairo\n\u2502\xa0\xa0     \u2514\u2500\u2500 environments\n\u2502\xa0\xa0         \u251c\u2500\u2500 osmium\n\u2502\xa0\xa0         \u2514\u2500\u2500 radium\n\u2514\u2500\u2500 users\n    \u251c\u2500\u2500 alice\n    \u2502\xa0\xa0 \u2514\u2500\u2500 environments\n    \u2502\xa0\xa0     \u251c\u2500\u2500 helium\n    \u2502\xa0\xa0     \u2514\u2500\u2500 nitrogen\n    \u251c\u2500\u2500 bob\n    \u2502\xa0\xa0 \u2514\u2500\u2500 environments\n    \u2502\xa0\xa0     \u251c\u2500\u2500 potassium\n    \u2502\xa0\xa0     \u2514\u2500\u2500 radon\n    \u2514\u2500\u2500 charlie\n        \u2514\u2500\u2500 tungsten\n")),(0,r.kt)("h2",{id:"softpack-builder"},"SoftPack Builder"),(0,r.kt)("mermaid",{value:'flowchart TB\n    classDef dashed_container fill:#FFFFFF, stroke-dasharray:4;\n\n    subgraph softpack_artifacts["SoftPack Artifacts (GitLab)"]\n      softpack_env(fa:fa-file-lines Environment Definitions <br/> Spack environment files)\n      softpack_modules(fa:fa-box-archive Module Files <br/> For use with module command)\n      softpack_images(fa:fa-box-open Container Images <br/> Docker/Singularity images)\n      softpack_env --- softpack_images\n      softpack_images --- softpack_modules\n    end    \n    class softpack_artifacts dashed_container;\n    linkStyle 0 stroke-width:0px;      \n    linkStyle 1 stroke-width:0px;      \n    \n    softpack_builder(fa:fa-gears SoftPack Builder <br/> Builds container images and module files)\n    \n    softpack_builder --\x3e|"REST API (GitLab, Docker Registry) / HTTP"| softpack_artifacts\n'}),(0,r.kt)("p",null,"SoftPack Builder is a lightweight service that listens to WebHooks from\nSoftPack Artifacts repository and proceeds to build a container image for the\nenvironment along with a module file. The module file is pushed to the repository\nin the environment's subdirectory while the container image is pushed to the\ncontainer registry and optionally applies any tags requested by the user."),(0,r.kt)("h2",{id:"softpack-deploy-agent"},"SoftPack Deploy Agent"),(0,r.kt)("mermaid",{value:'flowchart TB\n    classDef dashed_container fill:#FFFFFF, stroke-dasharray:4;\n\n    subgraph softpack_core[SoftPack Core]\n      direction LR\n      softpack_graphql(fa:fa-circle-nodes SoftPack GraphQL<br/> Implements GraphQL Service)\n      softpack_auth(fa:fa-shield-halved SoftPack Auth <br/> Implements authentication & authorization)\n      softpack_graphql -.-> softpack_auth\n    end\n    class softpack_core dashed_container;\n        \n    subgraph softpack_artifacts["SoftPack Artifacts (GitLab)"]\n      softpack_env(fa:fa-file-lines Environment Definitions <br/> Spack environment files)\n      softpack_modules(fa:fa-box-archive Module Files <br/> For use with module command)\n      softpack_images(fa:fa-box-open Container Images <br/> Docker/Singularity images)\n      softpack_env --- softpack_images\n      softpack_images --- softpack_modules\n    end    \n    class softpack_artifacts dashed_container;\n    linkStyle 1 stroke-width:0px;      \n    linkStyle 2 stroke-width:0px;      \n    \n    softpack_core --\x3e|"REST API (GitLab) / HTTP"| softpack_artifacts\n    \n    softpack_deploy(fa:fa-download SoftPack Deployment Agent <br/> Deploys container images and module files)\n\n    softpack_artifacts --\x3e|Webhook / HTTP| softpack_deploy\n\n    softpack_deploy --\x3e|"WebSocket (WS)"| softpack_core'}),(0,r.kt)("p",null,"SoftPack Deploy Agent is another lightweight service that listens to\nWebHooks from SoftPack Artifacts repository and deploys a module file and\ncontainer image built by SoftPack Builder."),(0,r.kt)("p",null,"The location of where the agent deploys the container image and module file\ndepends on the configuration of the agent. (TBD)"),(0,r.kt)("h2",{id:"usage-scenarios"},"Usage Scenarios"),(0,r.kt)("p",null,"Putting all the pieces together, we can now proceed to walk through a typical\nscenario of a user creating a new environment."),(0,r.kt)("h3",{id:"creating-a-new-environment"},"Creating a new environment"),(0,r.kt)("p",null,"This section describes the sequence of events generated from an end-user's\nrequest to create a new environment."),(0,r.kt)("p",null,"The SoftPack CLI and SoftPack Web clients operate in a similar fashion and\ncommunicate only to the SoftPack Core. The synchronous command line interface\nis similar to the asynchronous web interface with one exception that the\ncommand line does not return control to the user until the request has\npropagated through the system and the operation has completed."),(0,r.kt)("p",null,"The following sequence diagram illustrates the interaction between the various\ncomponents of the system resulting from a request to create a new environment\nfrom the user. Each step of this sequence is explained in the table that\nfollows the sequence diagram."),(0,r.kt)("mermaid",{value:"sequenceDiagram\n  autonumber\n  actor user as User\n  participant softpack_client as SoftPack Client <br/> CLI / Web\n  participant softpack_core as SoftPack Core\n  participant softpack_artifacts as SoftPack Artifacts <br/> GitLab Repo\n  \n  user ->> softpack_client: Create Environment\n  softpack_client ->> softpack_core: GraphQL Mutation <br/> HTTP POST   \n  softpack_core ->> softpack_artifacts: Create Environment <br/> GitLab REST API <br/> HTTP POST   \n  softpack_artifacts ->> softpack_core: HTTP RESPONSE\n  softpack_core ->> softpack_client: HTTP RESPONSE\n  softpack_core ->> softpack_client: Status = In Progress <br/> WebSocket (WS)\n  softpack_artifacts ->> SoftPack Builder: Environment Created <br/> HTTP POST (Webhook) \n  SoftPack Builder ->> softpack_artifacts: HTTP RESPONSE: OK\n  SoftPack Builder ->> softpack_artifacts: Push Module Definition <br/> GitLab REST API <br/> HTTP POST \n  softpack_artifacts ->> SoftPack Builder: HTTP RESPONSE\n  SoftPack Builder ->> softpack_artifacts: Push Container Image <br/> Docker Registry API <br/> HTTP POST \n  softpack_artifacts ->> SoftPack Builder: HTTP RESPONSE\n  softpack_artifacts ->> SoftPack Deploy Agent: Module & Image Created <br/> HTTP POST (Webhook)\n  SoftPack Deploy Agent ->> softpack_artifacts: HTTP RESPONSE: OK\n  SoftPack Deploy Agent ->> softpack_core: Status = OK <br/> WebSocket (WS)\n  softpack_core ->> softpack_client: Status = OK <br/> WebSocket (WS)\n  softpack_client ->> user: Environment Created"}),(0,r.kt)("h3",{id:"event-sequence"},"Event Sequence"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"#"),(0,r.kt)("th",{parentName:"tr",align:null},"Event"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"Create Environment"),(0,r.kt)("td",{parentName:"tr",align:null},"End-user sends a request to create a new environment using either the Web Client or the Command Line Interface.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"GraphQL Mutation"),(0,r.kt)("td",{parentName:"tr",align:null},"SoftPack client sends the request to create a new environment using GraphQL Mutation over HTTP")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"3"),(0,r.kt)("td",{parentName:"tr",align:null},"Create Environment in SoftPack Artifacts repository"),(0,r.kt)("td",{parentName:"tr",align:null},"SoftPack Core creates a new environment in SoftPack Artifacts repository")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"4"),(0,r.kt)("td",{parentName:"tr",align:null},"HTTP RESPONSE",(0,r.kt)("br",null),"Status = OK"),(0,r.kt)("td",{parentName:"tr",align:null},"SoftPack Artifacts repository returns ",(0,r.kt)("inlineCode",{parentName:"td"},"OK")," to SoftPack Core")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"5"),(0,r.kt)("td",{parentName:"tr",align:null},"HTTP RESPONSE",(0,r.kt)("br",null),"Status = OK"),(0,r.kt)("td",{parentName:"tr",align:null},"SoftPack Core returns ",(0,r.kt)("inlineCode",{parentName:"td"},"OK")," to the client")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"6"),(0,r.kt)("td",{parentName:"tr",align:null},"WebSocket (WS) ",(0,r.kt)("br",null)," Status = In Progress"),(0,r.kt)("td",{parentName:"tr",align:null},"SoftPack Core sends ",(0,r.kt)("inlineCode",{parentName:"td"},"In Progress")," status to the client in a WebSocket notification")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"7"),(0,r.kt)("td",{parentName:"tr",align:null},"Environment Created Webhook from SoftPack Artifacts repository"),(0,r.kt)("td",{parentName:"tr",align:null},"SoftPack Artifacts repository sends a Webhook notification to the Softpack Builder that a new environment has been created")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"8"),(0,r.kt)("td",{parentName:"tr",align:null},"HTTP RESPONSE",(0,r.kt)("br",null),"Status = OK"),(0,r.kt)("td",{parentName:"tr",align:null},"SoftPack Builder returns OK to SoftPack Artifacts repository")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9"),(0,r.kt)("td",{parentName:"tr",align:null},"Push Module Definition from SoftPack Builder"),(0,r.kt)("td",{parentName:"tr",align:null},"SoftPack Builder pushes a new module definition file to SoftPack Artifacts repository")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"10"),(0,r.kt)("td",{parentName:"tr",align:null},"HTTP RESPONSE",(0,r.kt)("br",null),"Status = OK"),(0,r.kt)("td",{parentName:"tr",align:null},"SoftPack Artifacts repository returns OK to SoftPack Builder")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"11"),(0,r.kt)("td",{parentName:"tr",align:null},"Push Container Image from SoftPack Builder"),(0,r.kt)("td",{parentName:"tr",align:null},"SoftPack Builder pushes a new container image to SoftPack Artifacts repository")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"12"),(0,r.kt)("td",{parentName:"tr",align:null},"HTTP RESPONSE",(0,r.kt)("br",null),"Status = OK"),(0,r.kt)("td",{parentName:"tr",align:null},"SoftPack Artifacts repository returns OK to SoftPack Builder")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"13"),(0,r.kt)("td",{parentName:"tr",align:null},"Module & UImage Created Webhook from SoftPack Artifacts repository"),(0,r.kt)("td",{parentName:"tr",align:null},"SoftPack Artifacts repository sends a Webhook notification to the SoftPack Deploy Agent that a new module definition and container image have been created")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"14"),(0,r.kt)("td",{parentName:"tr",align:null},"HTTP RESPONSE",(0,r.kt)("br",null),"Status = OK"),(0,r.kt)("td",{parentName:"tr",align:null},"SoftPack Deploy Agent returns OK to SoftPack Artifacts repository")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"15"),(0,r.kt)("td",{parentName:"tr",align:null},"WebSocket (WS) ",(0,r.kt)("br",null)," Status = OK"),(0,r.kt)("td",{parentName:"tr",align:null},"SoftPack Deploy Agent sends ",(0,r.kt)("inlineCode",{parentName:"td"},"OK")," to SoftPack Core once the module file and container images are deployed")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"16"),(0,r.kt)("td",{parentName:"tr",align:null},"WebSocket (WS) ",(0,r.kt)("br",null)," Status = OK"),(0,r.kt)("td",{parentName:"tr",align:null},"SoftPack Core sends ",(0,r.kt)("inlineCode",{parentName:"td"},"OK")," to SoftPack client that the new environment has been created")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"17"),(0,r.kt)("td",{parentName:"tr",align:null},"Environment Created"),(0,r.kt)("td",{parentName:"tr",align:null},"SoftPack client updates the status and notifies that user that their new environment has been created")))))}d.isMDXComponent=!0}}]);