"use strict";(self.webpackChunksoftpack_docs=self.webpackChunksoftpack_docs||[]).push([[732],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=l(n),d=a,f=m["".concat(c,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[m]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1969:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:6},i="Release Management",s={unversionedId:"reference/release_management",id:"reference/release_management",title:"Release Management",description:"This project uses Semantic Vesioning (SemVer) with each component",source:"@site/docs/reference/release_management.md",sourceDirName:"reference",slug:"/reference/release_management",permalink:"/softpack-docs/docs/reference/release_management",draft:!1,tags:[],version:"current",lastUpdatedAt:1683031689,formattedLastUpdatedAt:"May 2, 2023",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"docs",previous:{title:"Test Plan",permalink:"/softpack-docs/docs/reference/test_plan"},next:{title:"Code of Conduct",permalink:"/softpack-docs/docs/reference/code_of_conduct"}},c={},l=[{value:"Change Logs",id:"change-logs",level:2}],p={toc:l},m="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"release-management"},"Release Management"),(0,a.kt)("p",null,"This project uses ",(0,a.kt)("a",{parentName:"p",href:"https://semver.org"},"Semantic Vesioning (SemVer)")," with each component\ntagged with a MAJOR.MINOR.PATCH version number upon release. The version\nnumbering in SemVer is based on the following rules:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"MAJOR version when you make incompatible API changes"),(0,a.kt)("li",{parentName:"ul"},"MINOR version when you add functionality in a backwards compatible manner"),(0,a.kt)("li",{parentName:"ul"},"PATCH version when you make backwards compatible bug fixes")),(0,a.kt)("p",null,"Refer to ",(0,a.kt)("a",{parentName:"p",href:"https://semver.org"},"Semantic Vesioning")," guide for more details."),(0,a.kt)("h2",{id:"change-logs"},"Change Logs"),(0,a.kt)("p",null,"Change logs are generated automatically based on Git commits. Refer to the\n",(0,a.kt)("a",{parentName:"p",href:"/docs/reference/development_standards#coding-guidelines"},"Coding Guidelines"),"\nsection of the ",(0,a.kt)("a",{parentName:"p",href:"/docs/reference/development_standards"},"Development Standards"),"\nto ensure all commits to the code repository include the required issue tracker\nnumbers."))}u.isMDXComponent=!0}}]);